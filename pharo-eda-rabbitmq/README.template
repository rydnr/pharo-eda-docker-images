# PharoEDA's RabbitMQ

Runs a RabbitMQ instance as a Docker container.

This image requires account passwords to be provided at runtime, via environment variables.
- ADMIN_USER_PASSWORD
- MONITORING_USER_PASSWORD

## Examples:

- Run RabbitMQ with default settings:
> docker run -d -p [port]:5672 -p [port]:15672 --name mq \
    -e ADMIN_USER_PASSWORD=".." \
    -e MONITORING_USER_PASSWORD=".." \
    -v [changesets-folder]:/backup/rabbitmq/changesets \
    ${REGISTRY}/${NAMESPACE}/${IMAGE}:${TAG}

- Run RabbitMQ defining an explicit nodename:
> docker run -d -p [port]:5672 -p [port]:15672 --name mq \
    -e NODENAME="rabbit@cluster1" \
    -e ADMIN_USER_PASSWORD=".." \
    -e MONITORING_USER_PASSWORD=".." \
    -v [changesets-folder]:/backup/rabbitmq/changesets \
    ${REGISTRY}/${NAMESPACE}/${IMAGE}:${TAG}

As part of a Docker compose setup:

services:
  rabbitmq:
    image: acmsl-phusion/pharo-eda-rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - front-tier
      - back-tier
    environment:
      - ADMIN_USER_PASSWORD:secret
      - MONITORING_USER_PASSWORD:secret
    volumes:
      - rabbitmq-mnesia:/backup/rabbitmq/mnesia
      - type: bind
        source: rabbitmq/changesets
        target: /backup/rabbitmq/changesets

# vim: syntax=sh ts=2 sw=2 sts=4 sr noet
